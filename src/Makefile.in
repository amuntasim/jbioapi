# Makefile.in generated by automake 1.9.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


SOURCES = $(libjbioapi_la_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src
DIST_COMMON = $(dist_noinst_JAVA) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_jni_include_dirs.m4 \
	$(top_srcdir)/m4/ac_prog_javac.m4 \
	$(top_srcdir)/m4/ac_prog_javac_works.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libjbioapilibdir)" \
	"$(DESTDIR)$(jbioapiJardir)"
libjbioapilibLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(libjbioapilib_LTLIBRARIES)
libjbioapi_la_LIBADD =
am_libjbioapi_la_OBJECTS = jbioapi_wrap.lo extra.lo
libjbioapi_la_OBJECTS = $(am_libjbioapi_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libjbioapi_la_SOURCES)
DIST_SOURCES = $(libjbioapi_la_SOURCES)
CLASSPATH_ENV = CLASSPATH=$(JAVAROOT):$(srcdir)/$(JAVAROOT):$$CLASSPATH
JAVAROOT = $(top_builddir)
jbioapiJarDATA_INSTALL = $(INSTALL_DATA)
DATA = $(jbioapiJar_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISODATE = @ISODATE@
JAVAC = @JAVAC@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
_ACJNI_JAVAC = @_ACJNI_JAVAC@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
libjbioapilibdir = $(libdir)
libjbioapilib_LTLIBRARIES = libjbioapi.la
libjbioapi_la_SOURCES = jbioapi_wrap.c extra.c bioapi_api.h bioapi_schema.h bioapi_util.h net_qrivy_bioapi_BioAPI.h bioapi_err.h  bioapi_typecast.h  bioapi_uuid.h bioapi.h bioapi_type.h biospi_type.h
#jbioapi_wrap_c_SOURCES = jbioapi.i
EXTRA_DIST = jbioapi.i
libjbioapi_la_LDFLAGS = -module -version-info 0:0:0
#JAVAROOT=../bin
jbioapisources = net/qrivy/bioapi/BioAPI_BIR_ARRAY_POPULATION.java \
net/qrivy/bioapi/BioAPI_BIR_BIOMETRIC_DATA_FORMAT.java \
net/qrivy/bioapi/BioAPI_BIR_HEADER.java \
net/qrivy/bioapi/BioAPI_BIR.java \
net/qrivy/bioapi/BioAPI_BSP_SCHEMA.java \
net/qrivy/bioapi/BioAPI_CANDIDATE_BIR.java \
net/qrivy/bioapi/BioAPI_CANDIDATE.java \
net/qrivy/bioapi/BioAPIConstants.java \
net/qrivy/bioapi/BioAPI_DATA.java \
net/qrivy/bioapi/BioAPI_DBBIR_ID.java \
net/qrivy/bioapi/BioAPI_FUNC_NAME_ADDR.java \
net/qrivy/bioapi/BioAPI_GUI_BITMAP.java \
net/qrivy/bioapi/BioAPI_IDENTIFY_POPULATION_BIRs.java \
net/qrivy/bioapi/BioAPI_IDENTIFY_POPULATION.java \
net/qrivy/bioapi/BioAPI_INPUT_BIR_InputBIR.java \
net/qrivy/bioapi/BioAPI_INPUT_BIR.java \
net/qrivy/bioapi/BioAPI.java \
net/qrivy/bioapi/BioAPIJNI.java \
net/qrivy/bioapi/BioAPI_MEMORY_FUNCS.java \
net/qrivy/bioapi/BioAPI_SERVICE_UID.java \
net/qrivy/bioapi/BioAPI_VERSION.java \
net/qrivy/bioapi/SchemaArray.java \
net/qrivy/bioapi/SWIGTYPE_p_a_16__unsigned_char.java \
net/qrivy/bioapi/SWIGTYPE_p_f_p_q_const__a_16__unsigned_char_p_void_unsigned_int_unsigned_int_unsigned_int__unsigned_int.java \
net/qrivy/bioapi/SWIGTYPE_p_f_p_void_p_void__void.java \
net/qrivy/bioapi/SWIGTYPE_p_f_p_void_unsigned_int_p_void__p_void.java \
net/qrivy/bioapi/SWIGTYPE_p_f_unsigned_int_p_void__p_void.java \
net/qrivy/bioapi/SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__p_void.java \
net/qrivy/bioapi/SWIGTYPE_p_f___void.java \
net/qrivy/bioapi/SWIGTYPE_p_int.java \
net/qrivy/bioapi/SWIGTYPE_p_p_bioapi_data.java \
net/qrivy/bioapi/SWIGTYPE_p_p_bioapi_hrs_bir.java \
net/qrivy/bioapi/SWIGTYPE_p_p_p_bioapi_candidate.java \
net/qrivy/bioapi/SWIGTYPE_p_unsigned_char.java \
net/qrivy/bioapi/SWIGTYPE_p_unsigned_int.java \
net/qrivy/bioapi/SWIGTYPE_p_void.java \
net/qrivy/bioapi/verifyResult.java \
net/qrivy/jbioapi/BioApiException.java \
net/qrivy/jbioapi/BiometricServiceProvider.java \
net/qrivy/jbioapi/BiometricLoginModule.java \
net/qrivy/jbioapi/BiometricsFramework.java 
extrasources= es/uvigo/tsc/gts/biowebauth/lib/model/vo/FileVO.java \
es/uvigo/tsc/gts/biowebauth/lib/model/vo/SampleVO.java \
es/uvigo/tsc/gts/biowebauth/lib/jbioapi/utils/BIRHelper.java \
es/uvigo/tsc/gts/biowebauth/lib/jbioapi/utils/BioAPI_BIR_Customize.java \
es/uvigo/tsc/gts/biowebauth/lib/jbioapi/utils/BioAPI_BIR_HEADER_Customize.java \
es/uvigo/tsc/gts/biowebauth/lib/jbioapi/utils/ConversionUtils.java \
es/uvigo/tsc/gts/biowebauth/lib/jbioapi/utils/IOUtil.java 
extraresources = es/uvigo/tsc/gts/biowebauth/lib/jbioapi/resources/libjbioapi.so \
es/uvigo/tsc/gts/biowebauth/lib/jbioapi/resources/jbioapi.dll 
dist_noinst_JAVA = Test.java  $(extrasources) $(jbioapisources) 
jbioapiJardir = $(libdir)
jbioapiJar_DATA = jbioapi.jar
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libjbioapilibLTLIBRARIES: $(libjbioapilib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libjbioapilibdir)" || $(mkdir_p) "$(DESTDIR)$(libjbioapilibdir)"
	@list='$(libjbioapilib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libjbioapilibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libjbioapilibdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libjbioapilibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libjbioapilibdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libjbioapilibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(libjbioapilib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libjbioapilibdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libjbioapilibdir)/$$p"; \
	done

clean-libjbioapilibLTLIBRARIES:
	-test -z "$(libjbioapilib_LTLIBRARIES)" || rm -f $(libjbioapilib_LTLIBRARIES)
	@list='$(libjbioapilib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libjbioapi.la: $(libjbioapi_la_OBJECTS) $(libjbioapi_la_DEPENDENCIES) 
	$(LINK) -rpath $(libjbioapilibdir) $(libjbioapi_la_LDFLAGS) $(libjbioapi_la_OBJECTS) $(libjbioapi_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extra.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jbioapi_wrap.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

classdist_noinst.stamp: $(dist_noinst_JAVA)
	@if test -n "$?"; then \
	  echo '$(CLASSPATH_ENV) $(JAVAC) -d $(JAVAROOT) $(AM_JAVACFLAGS) $(JAVACFLAGS) $?' ; \
	  $(CLASSPATH_ENV) $(JAVAC) -d $(JAVAROOT) \
	    $(AM_JAVACFLAGS) $(JAVACFLAGS) $?; \
	else :; fi
	echo timestamp > classdist_noinst.stamp

clean-dist_noinstJAVA:
	-rm -f *.class classdist_noinst.stamp
install-jbioapiJarDATA: $(jbioapiJar_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(jbioapiJardir)" || $(mkdir_p) "$(DESTDIR)$(jbioapiJardir)"
	@list='$(jbioapiJar_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(jbioapiJarDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(jbioapiJardir)/$$f'"; \
	  $(jbioapiJarDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(jbioapiJardir)/$$f"; \
	done

uninstall-jbioapiJarDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(jbioapiJar_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(jbioapiJardir)/$$f'"; \
	  rm -f "$(DESTDIR)$(jbioapiJardir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/net/qrivy/bioapi $(distdir)/net/qrivy/jbioapi
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) classdist_noinst.stamp $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(libjbioapilibdir)" "$(DESTDIR)$(jbioapiJardir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-dist_noinstJAVA clean-generic \
	clean-libjbioapilibLTLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-jbioapiJarDATA \
	install-libjbioapilibLTLIBRARIES

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-local

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-jbioapiJarDATA \
	uninstall-libjbioapilibLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-dist_noinstJAVA clean-generic \
	clean-libjbioapilibLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-jbioapiJarDATA install-libjbioapilibLTLIBRARIES \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-local pdf pdf-am ps ps-am tags \
	uninstall uninstall-am uninstall-info-am \
	uninstall-jbioapiJarDATA uninstall-libjbioapilibLTLIBRARIES

all-binSetup:
	test -d bin || $(mkdir_p) bin || exit 1
jbioapi.jar : $(jbioapisources) $(extrasources)
	$(mkdir_p) ../es/uvigo/tsc/gts/biowebauth/lib/jbioapi/resources/
	cp 	$(extraresources) ../es/uvigo/tsc/gts/biowebauth/lib/jbioapi/resources/
	jar cvf jbioapi.jar ../net/ ../es/
#	jar cvf jbioapi.jar -C $(JAVAROOT) net/ ../es/
mostlyclean-local:
	rm jbioapi.jar
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
